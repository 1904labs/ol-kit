

.container {
  background-color: #FFFFFF;
  font-family: 'ArialMT', 'Arial';
  font-weight: 400;
  z-index: 99;
  box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2),
  0px 2px 2px 0px rgba(0, 0, 0, 0.14),
  0px 3px 1px -2px rgba(0, 0, 0, 0.12);
}
/* position: ${p => p.inline ? 'relative' : 'absolute'};
display: ${p => p.show ? 'block' : 'none'};
opacity: ${p => p.transparent ? 0.8 : 1};
width: ${p => appendPx(p.width)};
height: ${p => appendPx(p.height)};
left: ${({ arrow, height, pixel, width }) => positionContainer(arrow, pixel, width, height).left}px;
top: ${({ arrow, height, pixel, width }) => positionContainer(arrow, pixel, width, height).top}px; */


.arrowBox::after, .arrowBox::before {
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}


/* ${props => props.position === 'click' ? 'right' : props.position}: 100%;
${props => props.position === 'top' || props.position === 'bottom' ? 'left' : 'top'}: 50%; */

.arrowBox::after {
  border-width: 16px;
}
/* margin-${props => props.position === 'top' || props.position === 'bottom' ? 'left' : 'top'}: -16px;
border-${props => props.position === 'click' ? 'right' : props.position}-color: ${props => props.position === 'bottom'
? '#ededed'
: '#ffffff'}; */

.arrowBox::before {
  border-width: 17px;
}
/* margin-${props => props.position === 'top' || props.position === 'bottom' ? 'left' : 'top'}: -17px;
border-${props => props.position === 'click' ? 'right' : props.position}-color: rgba(0, 0, 0, 0.12); */

.dragHandleIcon {
  height: 25px;
  width: 70px;
  cursor: move;
  padding: 3px;
  z-index: 100;
  position: absolute;
  margin: auto;
  top: 0;
  left: 0;
  right: 0;
}

/* color: ${props => props.color || `#fff`}; */

